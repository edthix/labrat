{
  "openapi": "3.0.3",
  "info": {
    "title": "LABRAT",
    "version": "1.0.0",
    "description": "LABRAT exercises in multiple tech stacks",
    "termsOfService": "https://TODO.com",
    "contact": {
      "name": "edthix",
      "email": "edthix@gmail.com",
      "url": "https://github.com/edthix"
    },
    "license": {
      "name": "GPL3.0",
      "url": "https://gpl"
    }
  },
  "servers": [
    {
      "url": "https://localhost:5678/v1",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Users operations"
    },
    {
      "name": "auth",
      "description": "Authentication and Authorization"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "description": "Signup as a User",
        "summary": "TODO",
        "operationId": "signup",
        "tags": ["auth"],
        "requestBody": {
          "description": "The Signup User object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid user object"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
         "description": "Login as a User",
        "summary": "TODO",
        "operationId": "login",
        "tags": ["auth"],
        "requestBody": {
          "description": "The Login object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "The bearer token",
                  "example": "Bearer BEARER_STRING"
                }
              }
            }
          },
          "400": {
            "description": "invalid user object"
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "List of users",
        "summary": "List of users",
        "operationId": "listUsers",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
                "type": "string",
                "description": "Search email or full_name"
            },
            "required": false
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            },
            "description": "successful operation"
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "description": "The userId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get user by userId",
        "operationId": "getUser",
        "description": "Get a user by userId",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "successfull operation"
          },
          "404": {
            "description": "User not found"
          },
        }
      },
      "put": {
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update user by userId",
        "operationId": "updateUser",
        "description": "Update a user by userId",
        "requestBody": {
          "description": "The User object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "successfull operation"
          },
          "404": {
            "description": "User not found"
          },
        }
      },
      "delete": {
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete user by userId",
        "operationId": "deleteUser",
        "description": "Delete a user by userId",
        "responses": {
          "200": {
            "description": "successfull operation"
          },
          "404": {
            "description": "User not found"
          },
        }
      }
    },
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Login": {
        "description": "Login as a user",
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "SignupUser": {
        "description": "Sign up as user",
        "type": "object",
        "required": [
          "email",
          "full_name",
          "password"
        ],
        "properties": {
          "full_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "UserBase": {
        "description": "Base of User object",
        "type": "object",
        "required": [
          "email",
          "full_name"
        ],
        "properties": {
          "full_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "description": {
            "type": "string",
          },
          "status": {
            "description": "Status of the User",
            "type": "string",
            "default": "active",
            "enum": [
              "active",
              "banned"
            ]
          },
          "role": {
            "description": "Role of the User",
            "type": "string",
            "default": "normal",
            "enum": [
              "normal",
              "admin"
            ]
          }

        }
      },
      "User": {
        "description": "User object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UserBase"
          }
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Users": {
        "description": "List of User",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      }
    }
  }
}
